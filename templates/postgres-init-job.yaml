apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "summitlabs.fullname" . }}-postgres-init-aegra
  labels:
    {{- include "summitlabs.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgres-init
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      labels:
        {{- include "summitlabs.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: postgres-init
    spec:
      restartPolicy: OnFailure
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "summitlabs.serviceAccountName" . }}
      containers:
      - name: create-aegra-db
        image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
        imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
        env:
        - name: PGHOST
          value: {{ include "summitlabs.fullname" . }}-postgres
        - name: PGPORT
          value: "5432"
        - name: PGUSER
          value: {{ .Values.postgres.auth.username | quote }}
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "summitlabs.fullname" . }}-postgres-secret
              key: postgres-password
        - name: PGDATABASE
          value: "postgres"
        command:
        - sh
        - -c
        - |
          echo "Waiting for PostgreSQL to be ready..."
          until pg_isready -h $PGHOST -U $PGUSER; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

          echo "Creating aegra database if it doesn't exist..."
          psql -h $PGHOST -U $PGUSER -d $PGDATABASE -tc "SELECT 1 FROM pg_database WHERE datname = 'aegra'" | grep -q 1 || psql -h $PGHOST -U $PGUSER -d $PGDATABASE -c "CREATE DATABASE aegra"

          echo "Granting privileges..."
          psql -h $PGHOST -U $PGUSER -d $PGDATABASE -c "GRANT ALL PRIVILEGES ON DATABASE aegra TO $PGUSER"

          echo "aegra database setup complete!"
